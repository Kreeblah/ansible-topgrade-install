- name: Install topgrade on macOS systems via Homebrew
  when: ansible_distribution == 'MacOSX'
  block:
    - name: Check for brew binary
      ansible.builtin.raw: which brew
      check_mode: false
      changed_when: false
      failed_when: which_brew_result.rc > 1
      register: which_brew_result

    - name: Install topgrade using Homebrew
      community.general.homebrew:
        name: topgrade
        state: present

- name: Install topgrade on FreeBSD systems via packages
  when: ansible_distribution == 'FreeBSD'
  block:
    - name: Install topgrade using FreeBSD packages
      become: true
      community.general.pkgng:
        name: topgrade
        state: present

- name: Install topgrade on Debian-based systems
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  block:
    - name: Retrieve topgrade release data from GitHub
      ansible.builtin.uri:
        url: https://api.github.com/repos/topgrade-rs/topgrade/releases/latest
        body_format: json
        return_content: true
      register: topgrade_release_json

    - name: Extract Debian topgrade x86_64 package URL
      no_log: true
      ansible.builtin.set_fact:
        package_url: "{{ item.browser_download_url }}"
      with_items: "{{ topgrade_release_json.json.assets }}"
      when:
        - item.browser_download_url | regex_search("amd64.deb$")
        - ansible_architecture == "x86_64"

    - name: Extract Debian topgrade aarch64 package URL
      no_log: true
      ansible.builtin.set_fact:
        package_url: "{{ item.browser_download_url }}"
      with_items: "{{ topgrade_release_json.json.assets }}"
      when:
        - item.browser_download_url | regex_search("arm64.deb$")
        - ansible_architecture == "aarch64"

    - name: Fail if Debian topgrade package not found
      ansible.builtin.fail:
        msg: "Unable to find topgrade package for arch {{ ansible_architecture }}"
      when: package_url is not defined

    - name: Set Debian topgrade package filename
      ansible.builtin.set_fact:
        package_filename: "{{ package_url.split('/') | last }}"

    - name: Download Debian package
      ansible.builtin.get_url:
        url: "{{ package_url }}"
        dest: "/tmp/{{ package_filename }}"
        mode: "0660"

    - name: Install Debian topgrade package
      ansible.builtin.apt:
        deb: "/tmp/{{ package_filename }}"
      become: true

    - name: Cleanup Debian topgrade package
      ansible.builtin.file:
        state: absent
        path: "/tmp/{{ package_filename }}"
